library(data.table)
setwd("/Volumes/MY\ PASSPORT/Sepsis project")
files <- dir('data_mimic', recursive = TRUE, full.names = TRUE)

input_cv <- fread(files[15])
input_mv <- fread(files[16])
d_items <- fread(files[12])
output_both <- fread(files[20])
admit <- fread(files[1])
icustays <- fread(files[14])

##icu admission table
icustays[, intime:=as.POSIXct(strptime(INTIME, "%Y-%m-%d %H:%M:%S"))]
icustays[, outtime:=as.POSIXct(strptime(OUTTIME, "%Y-%m-%d %H:%M:%S"))]


##CV table
join_tables_cv <- unique(merge(d_items[,c('ITEMID','LABEL'), with = FALSE], input_cv, by = c('ITEMID')), by = NULL)

## format time
join_tables_cv[, charttime:=as.POSIXct(strptime(CHARTTIME, "%Y-%m-%d %H:%M:%S"))]



join_tables_mv <- unique(merge(d_items[,c('ITEMID','LABEL'), with = FALSE], input_mv, by = c('ITEMID')), by = NULL)
join_tables_mv[, starttime:=as.POSIXct(strptime(STARTTIME, "%Y-%m-%d %H:%M:%S"))]
join_tables_mv[, endtime:=as.POSIXct(strptime(ENDTIME, "%Y-%m-%d %H:%M:%S"))]

## output
join_tables_op <- unique(merge(d_items[,c('ITEMID','LABEL'), with = FALSE], output_both, by = c('ITEMID')), by = NULL)
join_tables_op[, charttime:=as.POSIXct(strptime(CHARTTIME, "%Y-%m-%d %H:%M:%S"))]


## To extract labels with units
#tmp <- unique(join_tables_cv[, c('LABEL', 'AMOUNTUOM')],by = NULL)
#tmp <- tmp[AMOUNTUOM != '']
#tmp$LABEL <- tolower(tmp$LABEL)
#tmp2 <- unique(join_tables_mv[, c('LABEL', 'AMOUNTUOM')],by = NULL)
#tmp2 <- tmp2[AMOUNTUOM != '']
#tmp2$LABEL <- tolower(tmp2$LABEL)

#tmp <- unique(join_tables_op[, c('LABEL', 'VALUEUOM')],by = NULL)
#tmp <- tmp[VALUEUOM != '']
#tmp$LABEL <- tolower(tmp$LABEL)

#write.table(tmp, '/Users/llc/Documents/any4.csv', sep = ',', row.names = FALSE, col.names = TRUE)

## Step 1: For both input and output, adjust timing with respect to admit time
icuids <- icustays$ICUSTAY_ID
tmp_cv <- merge(icustays[,c('ICUSTAY_ID','intime'), with = FALSE],join_tables_cv,by = c('ICUSTAY_ID'), all.x = FALSE, all.y = FALSE)
tmp_cv[, timetoadmit := as.numeric(difftime(charttime,intime,units = 'hours'))]

tmp_mv <- merge(icustays[,c('ICUSTAY_ID','intime'), with = FALSE],join_tables_mv,by = c('ICUSTAY_ID'), all.x = FALSE, all.y = FALSE)
tmp_mv[, timetoadmit := as.numeric(difftime(charttime,intime,units = 'hours'))]


join_tables_mv[, timetoadmitSt := as.numeric(difftime(starttime,intime],units = 'hours'))]
join_tables_mv[, timetoadmitEnd := as.numeric(difftime(endtime,intime],units = 'hours'))]
join_tables_op[, timetoadmit := as.numeric(difftime(charttime,unlist(icustays$intime)[match(.SD$ICUSTAY_ID, icuids)],units = 'hours'))]




## Step 2: To calculate hourly input and output
## Idea is such that for each recorded volume, find the starting time and ending time. 
## For example, drug A has a sequence of recording at different timings,
## for the first record, the starting time will be one hour ago.
## for other records, the starting time will be the previous timing.
## Then calculate the volume of this drug A at hours that before and after the recording timings
findsid <- function(DT){
newbottle <- DT$NEWBOTTLE
newbottle[which(is.na(newbottle))] <- 0
newbottle[DT$STOPPED=='Restart'] <- 1
sid <- cumsum(newbottle)
return(sid)
}
findsttime <- function(DT){
timings <- DT$timetoadmit
output <- c(timings[1]-1, timings[-length(timings)])
return(output)
}


tmp <- tmp_cv[tolower(AMOUNTUOM)=='ml']
setkey(tmp,SUBJECT_ID,HADM_ID,ICUSTAY_ID,ITEMID,LINKORDERID,timetoadmit)
tmp[, sid := findsid(.SD),by = list(SUBJECT_ID, HADM_ID,
                                   ICUSTAY_ID,ITEMID,LINKORDERID)]

tmp[,sttime := findsttime(.SD),by = list(SUBJECT_ID, HADM_ID,
                                   ICUSTAY_ID,ITEMID,LINKORDERID,sid)]

## With both starting time and ending time, hourly input can be calculated
cal_hourly_input <-function(DT){
## General formula:
##  st for starting time
##  et for ending time
## then this input contributes to both ceiling(st) and ceiling(et) 
r_vol <- DT$AMOUNT
st <- DT$sttime
et <- DT$timetoadmit
c_vol <- c(r_vol/(et-st)*(ceiling(st)-st),
           r_vol/(et-st)*(ceiling(et)-et))
c_time <- c(ceiling(st), ceiling(et))
return(list(c_vol, c_time))
}

hourly_input_cv <- tmp[, list(c_time = cal_hourly_input(.SD)[[2]],
                              c_vol = cal_hourly_input(.SD)[[1]]),
                              by = list(SUBJECT_ID, HADM_ID,
                                   ICUSTAY_ID,ITEMID,ROW_ID)]

tmp2 <- hourly_input_cv

hourly_input_cv <- unique(tmp2[,list(tot_vol = sum(c_vol,na.rm=TRUE)), by = list(SUBJECT_ID, HADM_ID,
                                   ICUSTAY_ID,c_time)],by=NULL)

tmp3 <- hourly_input_cv[,3:5,with=FALSE]
all_times <- seq(0, max(tmp3$c_time), by =1)  
ids <- unique(tmp3$ICUSTAY_ID)
setkey(tmp3,ICUSTAY_ID,c_time)
tmp4 <- tmp3[CJ(ids,all_times), roll = TRUE]
hourly_input_cv <- merge(tmp4[c_time<=72], unique(tmp2[,c('SUBJECT_ID','HADM_ID','ICUSTAY_ID'), with = FALSE],by=NULL), by = c('ICUSTAY_ID'), 
                    all.x=TRUE,all.y=FALSE,allow.cartesian = FALSE)
savedir <- '/Users/llc/Documents/Sepsis working folder/data/'
write.table(hourly_input_cv, paste0(savedir,'hourly_input_cv.csv'), sep = ',', row.names = FALSE, col.names = TRUE)
## For mv input, some modifications need to be changed before calculation
 




